openapi: 3.0.3
info:
  title: Bright Sky
  version: 1.0.20
  description: |
    <h2>JSON API for DWD's open weather data.</h2>

    Bright Sky's main API server is located at `https://api.brightsky.dev/`. The following paragraphs provide some background information on data sources, performance considerations, and internal structure. If you just want to get started, head straight to the [`weather` endpoint](#get-/weather) (for historical and forecasted weather) or the [`current_weather` endpoint](#get-/current_weather).

    The documentation you are looking at is generated from an OpenAPI specification. The current version is available from https://brightsky.dev/brightsky.yml.

    ## Data Origin

    Data with the observation types `current` and `historical` is published by [DWD's extensive network of observation stations](https://www.dwd.de/DE/leistungen/klimadatendeutschland/stationsliste.html). The difference between these two types lies only in the level of quality assurance that the DWD has provided (see the [DWD's Climate Data Center README](https://opendata.dwd.de/climate_environment/CDC/Readme_intro_CDC_ftp.txt)). Data with observation type `forecast` comes from [MOSMIX](https://www.dwd.de/EN/research/weatherforecasting/met_applications/nwp_applications/mosmix_application.html).

    All source files can be found on DWD's [Open Data Server](https://www.dwd.de/EN/ourservices/opendata/opendata.html):
    <table>
      <tr><th>Observation Type</th><th>Location</th></tr>
      <tr><td><code>historical</code></td><td><a href="https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/hourly/">https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/hourly/</a></td></tr>
      <tr><td><code>current</code></td><td><a href="https://opendata.dwd.de/weather/weather_reports/poi/">https://opendata.dwd.de/weather/weather_reports/poi/</a></td></tr>
      <tr><td><code>forecast</code></td><td><a href="https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_S/all_stations/kml/">https://opendata.dwd.de/weather/local_forecasts/mos/MOSMIX_S/all_stations/kml/</a></td></tr>
    </table>

    ## Good to Know

    ### Geographical Data Coverage

      Due to its nature as German meteorological service, the observations published by the DWD have a strong focus on Germany. While there is data for some locations outside of Germany, mainly in the rest of Europe, it is currently not a priority for us. Your mileage may vary.

    ### Historical Data Coverage

      Bright Sky currently only serves data going back to January 1st, 2010. We plan to extend this to the whole set of historical data published by the DWD in the future.

    ## On Stations and Sources...

    The DWD provides data from an extensive network of own and third-party meteorological observation stations, located mainly but not exclusively in Germany. Each of these is identified by a station ID. In an ideal world, these stations would provide an endless stream of one record of "historical weather" and one record of "forecasted weather" per hour. Sadly (and I am sure to much nuisance for the DWD), in the real world, stations have outages and measurement errors, and sometimes even move. Moreover, the weather forecasts come from a model that is not tied to any physical observation station locations, and predicts the meteorological parameters at a whole bunch of additional locations (which each get their own station ID).

    To accomodate these real-world complications, Bright Sky internally uses a concept of _sources_. Each source is a unique combination of location and observation type. Hence, each physical observation station (with a single station ID) will typically correspond to four sources in Bright Sky: one for each of the four observation types `forecast`, `synop`, `current`, and `historical`. If the station has moved during its lifetime, you may even find more than one source for the same station ID and observation type.

    Bright Sky's _source IDs_ have no meaning in the real world. They should be treated as the technical artifact they are, and not even relied on to stay constant (although they likely will within each major release of Bright Sky).

    ## Useful Links
      - [Bright Sky source code](https://github.com/jdemaeyer/brightsky/)
      - [Bright Sky infrastructure configuration](https://github.com/jdemaeyer/brightsky-infrastructure/)
      - [DWD Open Data landing page](https://www.dwd.de/EN/ourservices/opendata/opendata.html)
      - [Additional explanation files for DWD Open Data](https://www.dwd.de/DE/leistungen/opendata/hilfe.html?nn=495490&lsbId=627548), including:
          - [List of main observation stations](https://www.dwd.de/DE/leistungen/opendata/help/stationen/ha_messnetz.xls?__blob=publicationFile&v=1)
          - [List of additional observation stations](https://www.dwd.de/DE/leistungen/opendata/help/stationen/na_messnetz.xlsx?__blob=publicationFile&v=10)
          - [List of MOSMIX stations](https://www.dwd.de/DE/leistungen/met_verfahren_mosmix/mosmix_stationskatalog.cfg?view=nasPublication&nn=495490)
          - [List of meteorological parameters](https://www.dwd.de/DE/leistungen/opendata/help/schluessel_datenformate/kml/mosmix_elemente_pdf.pdf?__blob=publicationFile&v=2)
      - [DWD Open Data FAQ (German)](https://www.dwd.de/DE/leistungen/opendata/faqs_opendata.html)
      - [DWD Copyright information](https://www.dwd.de/EN/service/copyright/copyright_artikel.html)

  contact:
    email: jakob@naboa.de
    name: Jakob de Maeyer
    url: 'https://brightsky.dev/'
  license:
    name: MIT License
    url: 'https://raw.githubusercontent.com/jdemaeyer/brightsky/master/LICENSE'
servers:
  - url: 'https://api.brightsky.dev/'
paths:
  /weather:
    get:
      summary: Get observed and/or forecasted weather
      tags:
        - weather
      description: |
        Get a list of hourly weather records (and/or forecasts) for the time range given by `date` and `last_date`.

        To set the location for which to retrieve records (and/or forecasts), you must supply both `lat` and `lon` _or_ one of `dwd_station_id`, `wmo_station_id`, or `source_id`.
      operationId: getWeather
      parameters:
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/last_date'
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'
        - $ref: '#/components/parameters/dwd_station_id'
        - $ref: '#/components/parameters/wmo_station_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/max_dist'
        - $ref: '#/components/parameters/tz'
        - $ref: '#/components/parameters/units'
      responses:
        '200':
          description: Hourly weather records/forecasts and meta information on their sources.
          content:
            application/json:
              schema:
                type: object
                properties:
                  weather:
                    type: array
                    items:
                      $ref: '#/components/schemas/WeatherRecord'
                  sources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                example:
                  weather:
                    - timestamp: '2020-04-21T00:00:00+00:00'
                      source_id: 6007
                      cloud_cover: 0
                      condition: 'dry'
                      dew_point: -2.5
                      icon: 'clear-night'
                      precipitation: 0
                      pressure_msl: 1015.1
                      relative_humidity: 40
                      sunshine: 0
                      temperature: 10.6
                      visibility: 50000
                      wind_direction: 70
                      wind_speed: 12.6
                      wind_gust_direction: 50
                      wind_gust_speed: 33.5
                  sources:
                    - id: 6007
                      dwd_station_id: '01766'
                      wmo_station_id: '10315'
                      station_name: Münster/Osnabrück
                      observation_type: historical
                      lat: 52.1344
                      lon: 7.6969
                      height: 47.8
                      distance: 16365
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '404':
          $ref: '#/components/responses/NoSources'
  /current_weather:
    get:
      summary: Get current weather
      tags:
        - weather
      description: |
        Get current weather for a given location.

        This endpoint is different from the other weather endpoints in that it does not directly correspond to any of the data available from the DWD Open Data server. Instead, it is a best-effort solution to reflect current weather conditions by compiling SYNOP observations from the past one and a half hours.

        To set the location for which to retrieve weather, you must supply both `lat` and `lon` _or_ one of `dwd_station_id`, `wmo_station_id`, or `source_id`.
      operationId: getCurrentWeather
      parameters:
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'
        - $ref: '#/components/parameters/dwd_station_id'
        - $ref: '#/components/parameters/wmo_station_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/max_dist'
        - $ref: '#/components/parameters/tz'
        - $ref: '#/components/parameters/units'
      responses:
        '200':
          description: Current weather and meta information on its sources.
          content:
            application/json:
              schema:
                type: object
                properties:
                  weather:
                    allOf:
                      - $ref: '#/components/schemas/SynopRecord'
                      - type: object
                        properties:
                          fallback_source_ids:
                            description: Object mapping meteorological parameters to the source IDs of alternative sources that were used to fill up missing values in the main source
                            type: object
                  sources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                example:
                  weather:
                    source_id: 9296
                    timestamp: '2020-06-26T10:30:00+00:00'
                    cloud_cover: 0
                    condition: 'dry'
                    dew_point: 10.89
                    icon: 'clear-day'
                    precipitation_10: 0
                    precipitation_30: 0
                    precipitation_60: 0
                    pressure_msl: 1013.3
                    relative_humidity: 38
                    visibility: 34399
                    wind_direction_10: 110
                    wind_direction_30: 125
                    wind_direction_60: 132
                    wind_speed_10: 17.3
                    wind_speed_30: 15.5
                    wind_speed_60: 16.2
                    wind_gust_direction_10: 110
                    wind_gust_direction_30: 110
                    wind_gust_direction_60: 110
                    wind_gust_speed_10: 31.3
                    wind_gust_speed_30: 31.3
                    wind_gust_speed_60: 31.3
                    sunshine_30: 30
                    sunshine_60: 60
                    temperature: 26.3
                    fallback_source_ids:
                      visibility: 9358
                  sources:
                    - id: 9296
                      dwd_station_id: '01766'
                      observation_type: synop
                      lat: 52.1344
                      lon: 7.69685
                      height: 47.8
                      station_name: Muenster/Osnabrueck
                      wmo_station_id: '10315'
                      distance: 16363.614888635135
                    - id: 9358
                      dwd_station_id: '07374'
                      observation_type: synop
                      lat: 52.0814
                      lon: 6.94096
                      height: 45.5
                      station_name: Ahaus
                      wmo_station_id: '10309'
                      distance: 46027.181977953594
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '404':
          $ref: '#/components/responses/NoSources'
  /synop:
    get:
      summary: Get SYNOP observations
      tags:
        - weather
      description: |
        Get a list of ten-minutely SYNOP observations for the time range given by `date` and `last_date`. Note that Bright Sky only stores SYNOP observations from the past 30 hours.

        To set the weather station for which to retrieve records, you must supply one of `dwd_station_id`, `wmo_station_id`, or `source_id`. The `synop` endpoint does not support `lat` and `lon`; use the `sources` endpoint if you need to retrieve a SYNOP station ID close to a given location.

        SYNOP observations are stored as they were reported, which in particular implies that many parameters are only available at certain timestamps. For example, most stations report `sunshine_60` only on the full hour, and `sunshine_30` only at 30 minutes past the full hour (i.e. also not on the full hour). Check out the [`current_weather` endpoint](#get-/current_weather) for an opinionated compilation of recent SYNOP records into a single "current weather" record.
      operationId: getSynop
      parameters:
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/last_date'
        - $ref: '#/components/parameters/dwd_station_id'
        - $ref: '#/components/parameters/wmo_station_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/tz'
        - $ref: '#/components/parameters/units'
      responses:
        '200':
          description: Ten-minutely SYNOP records and meta information on the source.
          content:
            application/json:
              schema:
                type: object
                properties:
                  weather:
                    type: array
                    items:
                      $ref: '#/components/schemas/SynopRecord'
                  sources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                example:
                  weather:
                    - timestamp: '2020-06-25T13:00:00+00:00'
                      source_id: 9296
                      cloud_cover: 25
                      condition: 'dry'
                      dew_point: 14.81
                      icon: 'partly-cloudy-day'
                      precipitation_10:
                      precipitation_30:
                      precipitation_60: 0
                      pressure_msl: 1018.7
                      relative_humidity: 46
                      sunshine_10:
                      sunshine_30:
                      sunshine_60: 53
                      temperature: 27.5
                      visibility:
                      wind_direction_10: 80
                      wind_direction_30:
                      wind_direction_60:
                      wind_speed_10: 15.8
                      wind_speed_30:
                      wind_speed_60:
                      wind_gust_direction_10: 60
                      wind_gust_direction_30: 60
                      wind_gust_direction_60: 60
                      wind_gust_speed_10: 33.8
                      wind_gust_speed_30: 33.8
                      wind_gust_speed_60: 33.8
                  sources:
                    - id: 9296
                      dwd_station_id: '01766'
                      observation_type: synop
                      lat: 52.1344
                      lon: 7.69685
                      height: 47.8
                      station_name: Muenster/Osnabrueck
                      wmo_station_id: '10315'
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '404':
          $ref: '#/components/responses/NoSources'
  /sources:
    get:
      summary: Get available sources
      tags:
        - sources
      description: Get a list of all Bright Sky sources matching the given location criteria, ordered by distance.
      operationId: getSources
      parameters:
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'
        - $ref: '#/components/parameters/dwd_station_id'
        - $ref: '#/components/parameters/wmo_station_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/max_dist'
      responses:
        '200':
          description: Hourly weather records/forecasts and meta information on their sources.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                example:
                  sources:
                    - id: 6007
                      dwd_station_id: '01766'
                      wmo_station_id: '10315'
                      station_name: Münster/Osnabrück
                      observation_type: historical
                      lat: 52.1344
                      lon: 7.6969
                      height: 47.8
                      distance: 16365
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '404':
          $ref: '#/components/responses/NoSources'
components:
  schemas:
    Timestamp:
      type: string
      format: timestamp
      example: "2020-04-21"
    WeatherRecord:
      type: object
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: ISO 8601-formatted timestamp of this weather record/forecast
        source_id:
          description: Main Bright Sky source ID for this record
          type: integer
          example: 6007
        cloud_cover:
          description: Total cloud cover at timestamp
          type: number
          nullable: true
          example: 12.1
        condition:
          description: |
            Current weather conditions. Unlike the numerical parameters, this field is not taken as-is from the raw data (because it does not exist), but is calculated from different fields in the raw data as a best effort. Not all values are available for all source types.
          type: string
          nullable: true
          enum: ['dry', 'fog', 'rain', 'sleet', 'snow', 'hail', 'thunderstorm', null]
          example: 'rain'
        dew_point:
          description: Dew point at timestamp, 2 m above ground
          type: number
          nullable: true
          example: -2.5
        icon:
          description: |
            Icon alias suitable for the current weather conditions. Unlike the numerical parameters, this field is not taken as-is from the raw data (because it does not exist), but is calculated from different fields in the raw data as a best effort. Not all values are available for all source types.
          type: string
          nullable: true
          enum: ['clear-day', 'clear-night', 'partly-cloudy-day', 'partly-cloudy-night', 'cloudy', 'fog', 'wind', 'rain', 'sleet', 'snow', 'hail', 'thunderstorm', null]
          example: 'partly-cloudy-day'
        precipitation:
          description: Total precipitation during previous 60 minutes
          type: number
          nullable: true
          example: 1.8
        pressure_msl:
          description: Atmospheric pressure at timestamp, reduced to mean sea level
          type: number
          nullable: true
          example: 1015.1
        relative_humidity:
          description: Relative humidity at timestamp
          type: number
          nullable: true
          example: 40
        sunshine:
          description: Sunshine duration during previous 60 minutes
          type: number
          nullable: true
          example: 2100
        temperature:
          description: Air temperature at timestamp, 2 m above the ground
          type: number
          nullable: true
          example: 10.6
        visibility:
          description: Visibility at timestamp
          type: number
          nullable: true
          example: 50000
        wind_direction:
          description: Mean wind direction during previous hour, 10 m above the ground
          type: number
          nullable: true
          example: 70
        wind_speed:
          description: Mean wind speed during previous hour, 10 m above the ground
          type: number
          nullable: true
          example: 12.6
        wind_gust_direction:
          description: Direction of maximum wind gust during previous hour, 10 m above the ground
          type: number
          nullable: true
          example: 50
        wind_gust_speed:
          description: Speed of maximum wind gust during previous hour, 10 m above the ground
          type: number
          nullable: true
          example: 33.5
        fallback_source_ids:
          description: Object mapping meteorological parameters to the source IDs of alternative sources that were used to fill up missing values in the main source
          type: object
    SynopRecord:
      type: object
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: ISO 8601-formatted timestamp of this weather record/forecast
        source_id:
          description: Bright Sky source ID for this record
          type: integer
          example: 6007
        cloud_cover:
          description: Total cloud cover at timestamp
          type: number
          nullable: true
          example: 12.1
        condition:
          description: |
            Current weather conditions. Unlike the numerical parameters, this field is not taken as-is from the raw data (because it does not exist), but is calculated from different fields in the raw data as a best effort. Not all values are available for all source types.
          type: string
          nullable: true
          enum: ['dry', 'fog', 'rain', 'sleet', 'snow', 'hail', 'thunderstorm', null]
          example: 'rain'
        dew_point:
          description: Dew point at timestamp, 2 m above ground
          type: number
          nullable: true
          example: -2.5
        icon:
          description: |
            Icon alias suitable for the current weather conditions. Unlike the numerical parameters, this field is not taken as-is from the raw data (because it does not exist), but is calculated from different fields in the raw data as a best effort. Not all values are available for all source types.
          type: string
          nullable: true
          enum: ['clear-day', 'clear-night', 'partly-cloudy-day', 'partly-cloudy-night', 'cloudy', 'fog', 'wind', 'rain', 'sleet', 'snow', 'hail', 'thunderstorm', null]
          example: 'partly-cloudy-day'
        precipitation_10:
          description: Total precipitation during previous 10 minutes
          type: number
          nullable: true
          example: 0.8
        precipitation_30:
          description: Total precipitation during previous 30 minutes
          type: number
          nullable: true
          example: 1.2
        precipitation_60:
          description: Total precipitation during previous 60 minutes
          type: number
          nullable: true
          example: 1.8
        pressure_msl:
          description: Atmospheric pressure at timestamp, reduced to mean sea level
          type: number
          nullable: true
          example: 1015.1
        relative_humidity:
          description: Relative humidity at timestamp
          type: number
          nullable: true
          example: 40
        sunshine_10:
          description: Sunshine duration during previous 10 minutes
          type: number
          nullable: true
          example: 240
        sunshine_30:
          description: Sunshine duration during previous 30 minutes
          type: number
          nullable: true
          example: 1080
        sunshine_60:
          description: Sunshine duration during previous 60 minutes
          type: number
          nullable: true
          example: 2100
        temperature:
          description: Air temperature at timestamp, 2 m above the ground
          type: number
          nullable: true
          example: 10.6
        visibility:
          description: Visibility at timestamp
          type: number
          nullable: true
          example: 50000
        wind_direction_10:
          description: Mean wind direction during previous 10 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 70
        wind_direction_30:
          description: Mean wind direction during previous 30 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 70
        wind_direction_60:
          description: Mean wind direction during previous 60 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 70
        wind_speed_10:
          description: Mean wind speed during previous previous 10 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 12.6
        wind_speed_30:
          description: Mean wind speed during previous previous 30 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 12.6
        wind_speed_60:
          description: Mean wind speed during previous previous 60 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 12.6
        wind_gust_direction_10:
          description: Direction of maximum wind gust during previous 10 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 50
        wind_gust_direction_30:
          description: Direction of maximum wind gust during previous 30 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 50
        wind_gust_direction_60:
          description: Direction of maximum wind gust during previous 60 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 50
        wind_gust_speed_10:
          description: Speed of maximum wind gust during previous 10 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 33.5
        wind_gust_speed_30:
          description: Speed of maximum wind gust during previous 30 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 33.5
        wind_gust_speed_60:
          description: Speed of maximum wind gust during previous 60 minutes, 10 m above the ground
          type: number
          nullable: true
          example: 33.5
    Source:
      type: object
      properties:
        id:
          description: Bright Sky source ID
          type: integer
          example: 6007
        dwd_station_id:
          description: DWD weather station ID
          type: string
          nullable: true
          example: '01766'
        wmo_station_id:
          description: WMO weather station ID
          type: string
          nullable: true
          example: '10315'
        station_name:
          description: DWD weather station name
          type: string
          nullable: true
          example: 'Münster/Osnabrück'
        observation_type:
          description: Source type
          type: string
          example: 'historical'
          enum: ['forecast', 'synop', 'current', 'historical']
        first_record:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: Timestamp of first available record for this source
        last_record:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: Timestamp of latest available record for this source
        lat:
          description: Station latitude, in decimal degrees
          type: number
          example: 52.1344
        lon:
          description:   Station longitude, in decimal degrees
          type: number
          example: 7.6969
        height:
          description: Station height, in meters
          type: number
          example: 47.8
        distance:
          description: Distance of weather station to the requested `lat` and `lon`, in meters
          type: number
          example: 16365
  parameters:
    date:
      name: date
      in: query
      description: Timestamp of first weather record (or forecast) to retrieve, in ISO 8601 format, e.g. `2020-04-21` or `2020-04-24T12:00+02:00`. May contain time and/or UTC offset. If you do not supply a time, midnight will be assumed.
      example: '2020-04-21'
      required: true
      schema:
        $ref: '#/components/schemas/Timestamp'
    last_date:
      name: last_date
      in: query
      description: Timestamp of last weather record (or forecast) to retrieve, in ISO 8601 format. Will default to `date + 1 day`. (Also see explanation for `date`.)
      schema:
        $ref: '#/components/schemas/Timestamp'
    lat:
      name: lat
      in: query
      description: Latitude in decimal degrees, e.g. `51.58`.
      example: 51.58
      schema:
        type: number
    lon:
      name: lon
      in: query
      description: Longitude in decimal degrees, e.g. `7.38`.
      example: 7.38
      schema:
        type: number
    dwd_station_id:
      name: dwd_station_id
      in: query
      description: DWD station ID, typically five alphanumeric characters, e.g. `P0036`. You can supply multiple station IDs separated by commas, ordered from highest to lowest priority.
      schema:
        type: array
        items:
          type: string
      explode: false
    wmo_station_id:
      name: wmo_station_id
      in: query
      description: WMO station ID, typically five digits, e.g. `10315`. You can supply multiple station IDs separated by commas, ordered from highest to lowest priority.
      schema:
        type: array
        items:
          type: string
      explode: false
    source_id:
      name: source_id
      in: query
      description: Bright Sky source ID, as retrieved from the `sources` endpoint, e.g. `1234`. You can supply multiple source IDs separated by commas, ordered from highest to lowest priority.
      schema:
        type: array
        items:
          type: integer
      explode: false
    max_dist:
      name: max_dist
      in: query
      description: Maximum distance of record location from the location given by `lat` and `lon`, in meters, e.g. `10000`. Only has an effect when using `lat` and `lon`. Defaults to `50000`.
      schema:
        type: integer
    tz:
      name: tz
      in: query
      description: Timezone in which record timestamps will be presented, as <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">tz database name</a>, e.g. `Europe/Berlin`. Will also be used as timezone when parsing `date` and `last_date`, unless these have explicit UTC offsets. If omitted but `date` has an explicit UTC offset, that offset will be used as timezone. Otherwise will default to UTC.
      schema:
        type: string
    units:
      name: units
      in: query
      description: |
        Physical units in which meteorological parameters will be returned. Set to `si` to use <a href="https://en.wikipedia.org/wiki/International_System_of_Units">SI units</a>. The default `dwd` option uses a set of units that is more common in meteorological applications and civil use:
        <table>
          <tr><td></td><td>DWD</td><td>SI</td></tr>
          <tr><td>Cloud cover</td><td>%</td><td>%</td></tr>
          <tr><td>Dew point</td><td>°C</td><td>K</td></tr>
          <tr><td>Precipitation</td><td>mm</td><td>kg / m²</td></tr>
          <tr><td>Pressure</td><td>hPa</td><td>Pa</td></tr>
          <tr><td>Relative humidity</td><td>%</td><td>%</td></tr>
          <tr><td>Sunshine</td><td>min</td><td>s</td></tr>
          <tr><td>Temperature</td><td>°C</td><td>K</td></tr>
          <tr><td>Visibility</td><td>m</td><td>m</td></tr>
          <tr><td>Wind direction</td><td>°</td><td>°</td></tr>
          <tr><td>Wind speed</td><td>km / h</td><td>m / s</td></tr>
          <tr><td>Wind gust direction</td><td>°</td><td>°</td></tr>
          <tr><td>Wind gust speed</td><td>km / h</td><td>m / s</td></tr>
        </table>
      schema:
        type: string
        enum: ['dwd', 'si']
  responses:
    InvalidRequest:
      description: Request has missing or invalid parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
            example:
              title: 400 Bad Request
              description: Please supply lat/lon or dwd_station_id or wmo_station_id or source_id
    NoSources:
      description: No weather sources match the given location criteria.
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
            example:
              title: 404 Not Found
              description: No sources match your criteria
